{"version":3,"sources":["components/PropsRoute.js","functions/useLocationBlocker.js","components/ColoredButton.js","components/resume/UploadResume.js","components/resume/edit/BasicInfo.js","components/resume/edit/Skills.js","components/resume/edit/WorkExperience.js","components/resume/edit/ProjectExperience.js","components/resume/edit/EditResume.js","components/resume/tailor/BasicInfo.js","components/resume/tailor/Skills.js","components/resume/tailor/WorkExperience.js","components/resume/tailor/ProjectExperience.js","components/resume/tailor/TailorResume.js","components/resume/preview/PreviewResume.js","components/job_description/EditJobDescription.js","components/Loading.js","components/Routing.js","components/navigation/NavBar.js","components/ConsecutiveSnackbarMessages.js","components/progress_stepper/ProgressStepper.js","components/Main.js"],"names":["PropsRoute","_ref","component","rest","_objectWithoutProperties","React","createElement","Route","Object","assign","render","routeProps","_len","arguments","length","Array","_key","finalProps","apply","concat","renderMergedProps","getLocationId","pathname","search","hash","useLocationBlocker","history","useHistory","useEffect","block","location","action","memo","props","color","children","theme","buttonTheme","createTheme","adaptV4Theme","_objectSpread","palette","primary","main","buttonProps","StyledEngineProvider","injectFirst","ThemeProvider","Button","getColor","isDragAccept","isDragReject","success","error","dark","common","black","withStyles","_wrapper","_iconWrapper","wrapper","margin","spacing","width","_defineProperty","breakpoints","up","marginLeft","marginRight","marginTop","marginBottom","iconWrapper","button","borderWidth","borderColor","borderTopLeftRadius","borderBottomLeftRadius","background","textTransform","fullHeight","height","attachmentChip","textAlign","uploadIcon","transition","transitions","create","duration","short","easing","easeInOut","fontSize","uploadText","fontFamily","uploadFootnote","withTheme","pushMessageToSnackbar","classes","style","file","setFile","onDrop","useCallback","acceptedFiles","rejectedFiles","isErrorMessage","text","preview","URL","createObjectURL","key","Date","getTime","console","log","name","_useDropzone","useDropzone","accept","getRootProps","getInputProps","Box","className","ColoredButton","fullWidth","classNames","variant","sx","maxWidth","Fragment","Chip","onDelete","icon","Attachment","label","Inbox","Typography","textField","setName","phone","setPhone","email","setEmail","address","setAddress","portofolioLink","setPortofolioLink","& > :not(style)","m","TextField","value","onChange","e","target","skills","setSkills","newSkill","setNewSkill","map","skill","index","updatedSkills","_toConsumableArray","splice","handleDeleteSkill","startIcon","Add","onClick","textFieldMultiLine","addButton","jobs","setJobs","handleJobFieldChange","field","updatedJobs","job","title","company","summary","multiline","rows","handleDeleteJob","projects","setProjects","handleProjectFieldChange","updatedProjects","project","handleDeleteProject","_divider","divider","sectionTitle","fontWeight","resume","setResume","_React$useState","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","_React$useState13","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","basic_info","first_name","last_name","phone_number","portfolio_website_url","linkedin_url","skill_name","_step6","workExperiences","_iterator6","_createForOfIteratorHelper","work_experience","s","n","done","_step8","workExperience","summaries","experience_summary","bullet_point","summaryMessage","_iterator8","err","f","push","job_title","start_year_month","end_year_month","_step7","projectExperiences","_iterator7","project_experience","_step9","projectExperience","_iterator9","project_name","display","alignItems","justifyContent","resumeClone","split","_step","resumeSkills","_iterator","_step2","resumeJobs","_iterator2","_step4","_iterator4","replace","_step3","resumeProjects","_iterator3","_step5","_iterator5","JSON","stringify","size","mr","BasicInfo","Divider","Skills","WorkExperience","ProjectExperience","id","score","toLocaleString","undefined","minimumFractionDigits","issueType","basic","work","LinearProgressWithLabel","isloading","LinearProgress","borderRadius","minWidth","Math","round","_issueTitle","_issues","_suggestedWorkExperie","issueTitle","issueDescription","grey","leftPageTitle","evaluateButton","accordion","scoreMessage","& .MuiChip-label","whiteSpace","issues","light","suggestedWorkExperience","suggestedSkill","workPosition","instance","jobId","resumeId","_React$useState19","_React$useState20","activeSection","setActiveSection","handleAccordion","section","event","isExpanded","_React$useState21","_React$useState22","setIssues","_React$useState23","_React$useState24","setScore","_React$useState25","_React$useState26","setScoreMessage","_React$useState27","_React$useState28","suggestedSkills","setSuggestedSkills","_React$useState29","_React$useState30","suggestedWorkExperiences","setSuggestedWorkExperiences","_React$useState31","_React$useState32","suggestedProjectExperiences","setSuggestedProjectExperiences","_React$useState33","_React$useState34","isLoading","setIsLoading","handleUpdateIssue","updatedIssues","evaluateResume","issueSummaries","type","dummySuggestedSkills","includes","indexOf","_i","_dummySuggestedSkills","jobPromises","suggestedJobExperiences","forEach","body","experience","post","headers","Content-Type","Access-Control-Allow-Origin","projectPromises","jobIndex","projectIndex","Promise","all","then","a","jobRecommandationPromises","response","data","b","projectRecommandationPromises","c","_i2","_suggestedJobExperien","suggestedJobExperience","position","d","_i3","_suggestedProjectExpe","suggestedProjectExperience","_i4","_issueSummaries","issueSummary","ignore","get","relevenceScore","parseFloat","scoreClone","handleClickFocus","issue","suggestedSkillsClone","element","document","getElementById","scrollIntoView","behavior","focus","refreshForm","_step10","_iterator10","resumeString","Accordion","expanded","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","orientation","flexItem","filter","Alert","severity","Tooltip","IconButton","aria-label","Close","deleteIcon","indexA","isArray","List","listStyleType","pl","& .MuiListItem-root","point","indexB","ListItem","pageTitle","Paper","elevation","jobDescription","setJobDescription","Loading","CircularProgress","setResumeId","Switch","path","UploadResume","EditResume","EditJobDescription","TailorResume","PreviewResume","_appBarToolbar","appBar","boxShadow","shadows","backgroundColor","white","sharp","leavingScreen","down","appBarToolbar","paddingLeft","paddingRight","accountAvatar","secondary","smBordered","iconListItem","shape","paddingTop","paddingBottom","textPrimary","brandText","username","justifyCenter","handleNext","handleBack","handleRestart","activeStep","steps","isWidthUpSm","useMediaQuery","AppBar","Toolbar","disableGutters","Avatar","alt","ListItemText","disabled","flex","root","getPushMessageFromChild","_useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","messageInfo","setMessageInfo","queue","useRef","processQueue","current","shift","handleClose","_","reason","pushMessage","message","Snackbar","disableWindowBlurListener","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","TransitionProps","onExited","Stepper","step","Step","StepLabel","link","axios","baseURL","setActiveStep","setPushMessageToSnackbar","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setJobId","_useState11","_useState12","newActiveStep","formData","FormData","append","resume_id","NavBar","ConsecutiveSnackbarMessages","ProgressStepper","Routing"],"mappings":"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","file":"static/js/4.68dfc242.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\n/**\r\n * Wrapper around the Router component, which makes it pass the properties\r\n * to it's child.\r\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\r\n */\r\nconst PropsRoute = ({ component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\r\n  />\r\n);\r\n\r\nPropsRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\r\n};\r\n\r\nexport default PropsRoute;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst useLocationBlocker = () => {\r\n  /** \r\n   * Prevents react-router from pushing the same\r\n   * page to the history twice which leads to\r\n   * multiple clicks on the back icon of the browser\r\n   * being necessary to go back into the history.\r\n  */\r\n  const history = useHistory();\r\n  useEffect(\r\n    () =>\r\n      history.block(\r\n        (location, action) =>\r\n          action !== \"PUSH\" ||\r\n          getLocationId(location) !== getLocationId(history.location)\r\n      ),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n}\r\n\r\nconst getLocationId = ({ pathname, search, hash }) => {\r\n  return pathname + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\r\n}\r\n\r\nexport default useLocationBlocker;","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme } from \"@mui/material\";\r\n\r\nfunction ColoredButton(props) {\r\n    const { color, children, theme } = props;\r\n    const buttonTheme = createTheme(adaptV4Theme({\r\n        ...theme,\r\n        palette: {\r\n            primary: {\r\n                main: color\r\n            }\r\n        }\r\n    }));\r\n    const buttonProps = (({ color, theme, children, ...o }) => o)(props);\r\n    return (\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={buttonTheme}>\r\n                <Button {...buttonProps} color=\"primary\">\r\n                    {children}\r\n                </Button>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    );\r\n}\r\n\r\nColoredButton.propTypes = {\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default memo(ColoredButton);","import React, { useCallback, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Typography,\r\n    Chip,\r\n    Box,\r\n} from \"@mui/material\";\r\nimport classNames from \"classnames\";\r\nimport { Inbox, Attachment } from '@mui/icons-material';\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport ColoredButton from \"../ColoredButton\";\r\n\r\n\r\nconst styles = (theme) => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        width: \"auto\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"95%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: theme.spacing(4),\r\n            marginBottom: theme.spacing(4),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"90%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"82.5%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"70%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    iconWrapper: {\r\n        margin: theme.spacing(1),\r\n        width: \"auto\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"95%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            width: \"90%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            width: \"82.5%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            width: \"70%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    button: {\r\n        borderWidth: 1,\r\n        borderColor: \"rgba(0, 0, 0, 0.23)\",\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        background: \"#FFFFFF\",\r\n        textTransform: 'none'\r\n    },\r\n    fullHeight: {\r\n        height: \"100%\"\r\n    },\r\n    attachmentChip: {\r\n        textAlign: \"center\",\r\n        color: theme.palette.primary.main\r\n    },\r\n    uploadIcon: {\r\n        transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n            duration: theme.transitions.duration.short,\r\n            easing: theme.transitions.easing.easeInOut,\r\n        }),\r\n        textAlign: \"center\",\r\n        fontSize: 60,\r\n        color: theme.palette.primary.main\r\n    },\r\n    uploadText: {\r\n        transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n            duration: theme.transitions.duration.short,\r\n            easing: theme.transitions.easing.easeInOut,\r\n        }),\r\n        fontFamily: 'Roboto',\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    uploadFootnote: {\r\n        transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n            duration: theme.transitions.duration.short,\r\n            easing: theme.transitions.easing.easeInOut,\r\n        }),\r\n        fontFamily: 'Roboto',\r\n        textAlign: \"center\",\r\n        fontSize: 14,\r\n        color: \"textSecondary\"\r\n    },\r\n});\r\n\r\nfunction getColor(isDragAccept, isDragReject, theme) {\r\n    if (isDragAccept) {\r\n        return theme.palette.success.main;\r\n    }\r\n    if (isDragReject) {\r\n        return theme.palette.error.dark;\r\n    }\r\n    return theme.palette.common.black;\r\n}\r\n\r\nfunction UploadResume(props) {\r\n    const {\r\n        pushMessageToSnackbar,\r\n        classes,\r\n        style,\r\n        theme,\r\n        file,\r\n        setFile\r\n    } = props;\r\n\r\n\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFiles, rejectedFiles) => {\r\n            if (acceptedFiles.length + rejectedFiles.length > 1) {\r\n                pushMessageToSnackbar({\r\n                    isErrorMessage: true,\r\n                    text: \"You cannot upload more than one file at once\",\r\n                });\r\n            } else if (acceptedFiles.length === 0) {\r\n                pushMessageToSnackbar({\r\n                    isErrorMessage: true,\r\n                    text: \"The file you wanted to upload isn't a PDF\",\r\n                });\r\n            } else if (acceptedFiles.length === 1) {\r\n                const file = acceptedFiles[0];\r\n                file.preview = URL.createObjectURL(file);\r\n                file.key = new Date().getTime();\r\n                console.log(file.name);\r\n                setFile(file);\r\n            }\r\n        },\r\n        [pushMessageToSnackbar, setFile]\r\n    );\r\n\r\n    const handleDelete = () => {\r\n        const file = null;\r\n        setFile(file);\r\n        pushMessageToSnackbar({\r\n            isErrorMessage: false,\r\n            text: \"File Deleted\",\r\n        });\r\n    };\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: \"application/pdf\",\r\n        onDrop: onDrop\r\n    });\r\n\r\n    return (\r\n        <Box {...getRootProps()} height=\"100%\" className={classes.wrapper}>\r\n            <input {...getInputProps()} />\r\n\r\n            <ColoredButton\r\n                fullWidth\r\n                className={classNames(\r\n                    classes.fullHeight,\r\n                    classes.button\r\n                )}\r\n                variant=\"outlined\"\r\n                style={style}\r\n                color={getColor(isDragAccept, isDragReject, theme)}\r\n            >\r\n                <Box className={classes.wrapper} sx={{ width: '100%', maxWidth: 395 }}>\r\n                    <Box className={classes.iconWrapper}>\r\n                        {file ? (\r\n                            <Fragment>\r\n                                <Chip\r\n                                    variant=\"outlined\"\r\n                                    className={classes.attachmentChip}\r\n                                    onDelete={handleDelete}\r\n                                    icon={<Attachment className={classes.attachmentChip} />}\r\n                                    label={file.name} />\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <Inbox\r\n                                    className={classes.uploadIcon}\r\n                                />\r\n                            </Fragment>\r\n                        )}\r\n                    </Box>\r\n                    <Typography\r\n                        className={classes.uploadText}\r\n                    >\r\n                        Click or drag <b>PDF</b> file to this area to upload\r\n                    </Typography>\r\n                    <Typography\r\n                        className={classes.uploadFootnote}\r\n                        color=\"textSecondary\"\r\n                    >\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\r\n                    </Typography>\r\n                </Box>\r\n            </ColoredButton>\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nUploadResume.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    file: PropTypes.object,\r\n    setFile: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(UploadResume);\r\n","import React from 'react';\r\nimport { TextField, Box } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n    },\r\n});\r\n\r\nfunction BasicInfoSection(props) {\r\n    const {\r\n        classes,\r\n        name,\r\n        setName,\r\n        phone,\r\n        setPhone,\r\n        email,\r\n        setEmail,\r\n        address,\r\n        setAddress,\r\n        portofolioLink,\r\n        setPortofolioLink\r\n    } = props;\r\n\r\n    return (\r\n        <Box component=\"form\"\r\n            sx={{\r\n                '& > :not(style)': { m: \"1%\", width: '48%' },\r\n            }}>\r\n            <TextField\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Phone Number\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Location\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Portofolio Link\"\r\n                value={portofolioLink}\r\n                onChange={(e) => setPortofolioLink(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nBasicInfoSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    name: PropTypes.string,\r\n    setName: PropTypes.func,\r\n    phone: PropTypes.string,\r\n    setPhone: PropTypes.func,\r\n    email: PropTypes.string,\r\n    setEmail: PropTypes.func,\r\n    address: PropTypes.string,\r\n    setAddress: PropTypes.func,\r\n    portofolioLink: PropTypes.string,\r\n    setPortofolioLink: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(BasicInfoSection);","import React from 'react';\r\nimport { TextField, Button, Box, Chip } from \"@mui/material\";\r\nimport { Add } from '@mui/icons-material';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n        width: \"98%\"\r\n    },\r\n});\r\n\r\nfunction SkillsSection(props) {\r\n    const {\r\n        classes,\r\n        skills,\r\n        setSkills,\r\n        newSkill,\r\n        setNewSkill\r\n    } = props;\r\n\r\n\r\n\r\n    const handleAddSkill = () => {\r\n        if (newSkill) {\r\n            setSkills([...skills, newSkill]);\r\n            setNewSkill('');\r\n        }\r\n    };\r\n\r\n    const handleDeleteSkill = (index) => {\r\n        const updatedSkills = [...skills];\r\n        updatedSkills.splice(index, 1);\r\n        setSkills(updatedSkills);\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\"\r\n            sx={{\r\n                '& > :not(style)': { m: \"1%\" },\r\n            }}>\r\n            <div>\r\n                {skills.map((skill, index) => (\r\n                    <Chip\r\n                        key={index}\r\n                        label={skill}\r\n                        onDelete={() => handleDeleteSkill(index)}\r\n                        style={{ margin: '5px' }}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <TextField\r\n                label=\"New Skill\"\r\n                value={newSkill}\r\n                onChange={(e) => setNewSkill(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add />}\r\n                onClick={handleAddSkill}\r\n            >\r\n                Add Skill\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\n\r\nSkillsSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    skills: PropTypes.arrayOf(PropTypes.string),\r\n    setSkills: PropTypes.func,\r\n    newSkill: PropTypes.string,\r\n    setNewSkill: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SkillsSection);","import React from 'react';\r\nimport { TextField, Button, Box } from \"@mui/material\";\r\nimport { Add } from '@mui/icons-material';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n        width: \"48%\"\r\n    },\r\n    textFieldMultiLine: {\r\n        background: \"#FFFFFF\",\r\n        width: \"98%\"\r\n    },\r\n    addButton: {\r\n        margin: \"1%\",\r\n        marginBottom: '10px'\r\n    },\r\n});\r\n\r\nfunction WorkExperienceSection(props) {\r\n    const {\r\n        classes,\r\n        jobs,\r\n        setJobs\r\n    } = props;\r\n\r\n    const handleJobFieldChange = (index, field, value) => {\r\n        const updatedJobs = [...jobs];\r\n        updatedJobs[index][field] = value;\r\n        setJobs(updatedJobs);\r\n    };\r\n\r\n    const handleAddJob = () => {\r\n        setJobs([...jobs, { title: '', company: '', location: '', duration: '', summary: '' }]);\r\n    };\r\n\r\n    const handleDeleteJob = (index) => {\r\n        const updatedJobs = [...jobs];\r\n        updatedJobs.splice(index, 1);\r\n        setJobs(updatedJobs);\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\">\r\n            {jobs.map((job, index) => (\r\n                <Box\r\n                    sx={{\r\n                        '& > :not(style)': { m: \"1%\" },\r\n                    }}\r\n                    key={index}>\r\n                    <TextField\r\n                        label=\"Job Title\"\r\n                        value={job.title}\r\n                        onChange={(e) => handleJobFieldChange(index, 'title', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Company\"\r\n                        value={job.company}\r\n                        onChange={(e) => handleJobFieldChange(index, 'company', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Location\"\r\n                        value={job.location}\r\n                        onChange={(e) => handleJobFieldChange(index, 'location', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Duration\"\r\n                        value={job.duration}\r\n                        onChange={(e) => handleJobFieldChange(index, 'duration', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Summary\"\r\n                        value={job.summary}\r\n                        onChange={(e) => handleJobFieldChange(index, 'summary', e.target.value)}\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        className={classes.textFieldMultiLine}\r\n                    />\r\n                    {jobs.length !== 1 && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleDeleteJob(index)}\r\n                        >\r\n                            Delete Job\r\n                        </Button>\r\n                    )}\r\n                </Box>\r\n            ))}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add />}\r\n                onClick={handleAddJob}\r\n                className={classes.addButton}\r\n            >\r\n                Add Job\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\n\r\nWorkExperienceSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    jobs: PropTypes.arrayOf(PropTypes.object),\r\n    setJobs: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(WorkExperienceSection);","import React from 'react';\r\nimport { TextField, Button, Box } from \"@mui/material\";\r\nimport { Add } from '@mui/icons-material';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n        width: \"48%\"\r\n    },\r\n    textFieldMultiLine: {\r\n        background: \"#FFFFFF\",\r\n        width: \"98%\"\r\n    },\r\n    addButton: {\r\n        margin: \"1%\",\r\n    },\r\n});\r\n\r\nfunction ProjectExperienceSection(props) {\r\n    const {\r\n        classes,\r\n        projects,\r\n        setProjects,\r\n    } = props;\r\n\r\n    const handleProjectFieldChange = (index, field, value) => {\r\n        const updatedProjects = [...projects];\r\n        updatedProjects[index][field] = value;\r\n        setProjects(updatedProjects);\r\n    };\r\n\r\n    const handleAddProject = () => {\r\n        setProjects([...projects, { name: '', summary: '' }]);\r\n    };\r\n\r\n    const handleDeleteProject = (index) => {\r\n        const updatedProjects = [...projects];\r\n        updatedProjects.splice(index, 1);\r\n        setProjects(updatedProjects);\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\">\r\n            {projects.map((project, index) => (\r\n                <Box sx={{\r\n                    '& > :not(style)': { m: \"1%\" },\r\n                }}\r\n                    key={index}>\r\n\r\n                    <TextField\r\n                        label=\"Project Name\"\r\n                        value={project.name}\r\n                        onChange={(e) => handleProjectFieldChange(index, 'name', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Summary\"\r\n                        value={project.summary}\r\n                        onChange={(e) => handleProjectFieldChange(index, 'summary', e.target.value)}\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        className={classes.textFieldMultiLine}\r\n                    />\r\n                    {projects.length !== 1 && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleDeleteProject(index)}\r\n                        >\r\n                            Delete Project\r\n                        </Button>\r\n                    )}\r\n                </Box>\r\n            ))}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add />}\r\n                onClick={handleAddProject}\r\n                className={classes.addButton}\r\n            >\r\n                Add Project\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nProjectExperienceSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    projects: PropTypes.arrayOf(PropTypes.object),\r\n    setProjects: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ProjectExperienceSection);","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Divider,\r\n    Button\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport BasicInfo from \"./BasicInfo\";\r\nimport Skills from \"./Skills\";\r\nimport WorkExperience from \"./WorkExperience\";\r\nimport ProjectExperience from \"./ProjectExperience\";\r\n\r\n\r\nconst styles = (theme) => ({\r\n    divider: {\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n        marginLeft: \"1%\",\r\n        marginRight: \"1%\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n    },\r\n    sectionTitle: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        color: theme.palette.primary.main,\r\n        marginLeft: \"1%\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        width: \"auto\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"95%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: theme.spacing(4),\r\n            marginBottom: theme.spacing(4),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"90%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"82.5%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"70%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n});\r\n\r\nfunction EditResume(props) {\r\n    const {\r\n        pushMessageToSnackbar,\r\n        classes,\r\n        resume,\r\n        setResume\r\n    } = props;\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [phone, setPhone] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [portofolioLink, setPortofolioLink] = React.useState('');\r\n    const [skills, setSkills] = React.useState([]);\r\n    const [newSkill, setNewSkill] = React.useState('');\r\n    const [jobs, setJobs] = React.useState([\r\n        { title: '', company: '', location: '', duration: '', summary: '' },\r\n    ]);\r\n    const [projects, setProjects] = React.useState([\r\n        { name: '', summary: '' },\r\n    ]);\r\n\r\n    const updateResume = () => {\r\n        var resumeClone = { ...resume };\r\n        resumeClone.basic_info.first_name = name.split(\" \").length > 0 ? name.split(\" \")[0] : \"\";\r\n        resumeClone.basic_info.last_name = name.split(\" \").length > 1 ? name.split(\" \")[1] : \"\";\r\n        resumeClone.basic_info.phone_number = phone;\r\n        resumeClone.basic_info.email = email;\r\n        resumeClone.basic_info.location = address;\r\n        resumeClone.basic_info.portfolio_website_url = portofolioLink;\r\n\r\n        let resumeSkills = []\r\n        for (let skill of skills) {\r\n            resumeSkills.push({ skill_name: skill })\r\n        }\r\n        resumeClone.skills = [...resumeSkills];\r\n\r\n        let resumeJobs = []\r\n        for (let job of jobs) {\r\n            let summaries = job.summary.split(\"\\n- \")\r\n            let experience_summary = []\r\n            for (let bullet_point of summaries) {\r\n                experience_summary.push({ bullet_point: bullet_point.replace('- ', '').replace('\\n', '') })\r\n            }\r\n\r\n            resumeJobs.push({\r\n                job_title: job.title,\r\n                company: job.company,\r\n                location: job.location,\r\n                start_year_month: job.duration.split(\" to \").length > 0 ? job.duration.split(\" to \")[0] : \"\",\r\n                end_year_month: job.duration.split(\" to \").length > 1 ? job.duration.split(\" to \")[1] : \"\",\r\n                experience_summary: experience_summary\r\n            })\r\n        }\r\n        resumeClone.work_experience = [...resumeJobs];\r\n\r\n        let resumeProjects = []\r\n        for (let project of projects) {\r\n            let summaries = project.summary.split(\"\\n- \")\r\n            let experience_summary = []\r\n            for (let bullet_point of summaries) {\r\n                experience_summary.push({ bullet_point: bullet_point.replace('- ', '').replace('\\n', '') })\r\n            }\r\n\r\n            resumeProjects.push({\r\n                project_name: project.name,\r\n                experience_summary: experience_summary\r\n            })\r\n        }\r\n        resumeClone.project_experience = [...resumeProjects];\r\n\r\n        setResume(resumeClone);\r\n        console.log(JSON.stringify(resumeClone))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (resume != null) {\r\n            setName(resume.basic_info.first_name + \" \" + resume.basic_info.last_name);\r\n            setPhone(resume.basic_info.phone_number);\r\n            setEmail(resume.basic_info.email);\r\n            setAddress(resume.basic_info.location);\r\n            setPortofolioLink(resume.basic_info.portfolio_website_url || resume.basic_info.linkedin_url);\r\n            setSkills(resume.skills.map(skill => skill.skill_name));\r\n\r\n            let workExperiences = [];\r\n            for (let workExperience of resume.work_experience) {\r\n                let summaries = workExperience.experience_summary.map(summary => summary.bullet_point);\r\n                let summaryMessage = \"\"\r\n                for (let summary of summaries) {\r\n                    summaryMessage += \"- \" + summary + \"\\n\"\r\n                }\r\n                workExperiences.push({\r\n                    title: workExperience.job_title,\r\n                    company: workExperience.company,\r\n                    location: workExperience.location,\r\n                    duration: workExperience.start_year_month + \" to \" + workExperience.end_year_month,\r\n                    summary: summaryMessage\r\n                })\r\n            }\r\n            setJobs(workExperiences);\r\n\r\n            let projectExperiences = [];\r\n            for (let projectExperience of resume.project_experience) {\r\n                let summaries = projectExperience.experience_summary.map(summary => summary.bullet_point);\r\n                let summaryMessage = \"\"\r\n                for (let summary of summaries) {\r\n                    summaryMessage += \"- \" + summary + \"\\n\"\r\n                }\r\n                projectExperiences.push({\r\n                    name: projectExperience.project_name,\r\n                    summary: summaryMessage\r\n                })\r\n            }\r\n            setProjects(projectExperiences);\r\n\r\n        }\r\n    }, [resume, setResume]);\r\n\r\n    return (\r\n        <Box className={classes.wrapper}>\r\n            <Box display=\"flex\" alignItems=\"center\" sx={{ justifyContent: 'space-around' }} >\r\n                <Button\r\n                    onClick={updateResume}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    sx={{ mr: 1 }}\r\n                >\r\n                    Update\r\n                </Button>\r\n            </Box>\r\n            <Typography className={classes.sectionTitle}>Basic Info</Typography>\r\n            <BasicInfo\r\n                pushMessageToSnackbar={pushMessageToSnackbar}\r\n                name={name}\r\n                setName={setName}\r\n                phone={phone}\r\n                setPhone={setPhone}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                address={address}\r\n                setAddress={setAddress}\r\n                portofolioLink={portofolioLink}\r\n                setPortofolioLink={setPortofolioLink}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <Typography className={classes.sectionTitle}>Skills</Typography>\r\n            <Skills\r\n                pushMessageToSnackbar={pushMessageToSnackbar}\r\n                skills={skills}\r\n                setSkills={setSkills}\r\n                newSkill={newSkill}\r\n                setNewSkill={setNewSkill}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <Typography className={classes.sectionTitle}>Work Experience</Typography>\r\n            <WorkExperience\r\n                pushMessageToSnackbar={pushMessageToSnackbar}\r\n                jobs={jobs}\r\n                setJobs={setJobs}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <Typography className={classes.sectionTitle}>Project Experience</Typography>\r\n            <ProjectExperience\r\n                pushMessageToSnackbar={pushMessageToSnackbar}\r\n                projects={projects}\r\n                setProjects={setProjects}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nEditResume.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    resume: PropTypes.object,\r\n    setResume: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EditResume);\r\n","import React from 'react';\r\nimport { TextField, Box } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n    },\r\n});\r\n\r\nfunction BasicInfoSection(props) {\r\n    const {\r\n        classes,\r\n        name,\r\n        setName,\r\n        phone,\r\n        setPhone,\r\n        email,\r\n        setEmail,\r\n        address,\r\n        setAddress,\r\n        portofolioLink,\r\n        setPortofolioLink\r\n    } = props;\r\n\r\n    return (\r\n        <Box component=\"form\"\r\n            sx={{\r\n                '& > :not(style)': { m: \"1%\", width: '48%' },\r\n            }}>\r\n            <TextField\r\n                label=\"Name\"\r\n                id=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Phone Number\"\r\n                id=\"phone\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Location\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                label=\"Portofolio Link\"\r\n                id=\"portofolio\"\r\n                value={portofolioLink}\r\n                onChange={(e) => setPortofolioLink(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nBasicInfoSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    name: PropTypes.string,\r\n    setName: PropTypes.func,\r\n    phone: PropTypes.string,\r\n    setPhone: PropTypes.func,\r\n    email: PropTypes.string,\r\n    setEmail: PropTypes.func,\r\n    address: PropTypes.string,\r\n    setAddress: PropTypes.func,\r\n    portofolioLink: PropTypes.string,\r\n    setPortofolioLink: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(BasicInfoSection);","import React from 'react';\r\nimport { TextField, Button, Box, Chip } from \"@mui/material\";\r\nimport { Add } from '@mui/icons-material';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n        width: \"98%\"\r\n    },\r\n});\r\n\r\nfunction SkillsSection(props) {\r\n    const {\r\n        classes,\r\n        skills,\r\n        setSkills,\r\n        newSkill,\r\n        setNewSkill\r\n    } = props;\r\n\r\n\r\n\r\n    const handleAddSkill = () => {\r\n        if (newSkill) {\r\n            setSkills([...skills, newSkill]);\r\n            setNewSkill('');\r\n        }\r\n    };\r\n\r\n    const handleDeleteSkill = (index) => {\r\n        const updatedSkills = [...skills];\r\n        updatedSkills.splice(index, 1);\r\n        setSkills(updatedSkills);\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\"\r\n            sx={{\r\n                '& > :not(style)': { m: \"1%\" },\r\n            }}>\r\n            <div>\r\n                {skills.map((skill, index) => (\r\n                    <Chip\r\n                        key={index}\r\n                        label={skill}\r\n                        onDelete={() => handleDeleteSkill(index)}\r\n                        style={{ margin: '5px' }}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <TextField\r\n                label=\"New Skill\"\r\n                id=\"skill\"\r\n                value={newSkill}\r\n                onChange={(e) => setNewSkill(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add />}\r\n                onClick={handleAddSkill}\r\n            >\r\n                Add Skill\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\n\r\nSkillsSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    skills: PropTypes.arrayOf(PropTypes.string),\r\n    setSkills: PropTypes.func,\r\n    newSkill: PropTypes.string,\r\n    setNewSkill: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SkillsSection);","import React from 'react';\r\nimport { TextField, Button, Box, Typography } from \"@mui/material\";\r\nimport { Add } from '@mui/icons-material';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n        width: \"48%\"\r\n    },\r\n    textFieldMultiLine: {\r\n        background: \"#FFFFFF\",\r\n        width: \"98%\"\r\n    },\r\n    addButton: {\r\n        margin: \"1%\",\r\n        marginBottom: '10px'\r\n    },\r\n    score: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 500,\r\n        fontSize: 20,\r\n        color: theme.palette.primary.main,\r\n        marginLeft: \"1%\",\r\n    },\r\n});\r\n\r\nfunction WorkExperienceSection(props) {\r\n    const {\r\n        classes,\r\n        jobs,\r\n        setJobs,\r\n        handleJobFieldChange\r\n    } = props;\r\n\r\n    const handleAddJob = () => {\r\n        setJobs([...jobs, { title: '', company: '', location: '', duration: '', summary: '' }]);\r\n    };\r\n\r\n    const handleDeleteJob = (index) => {\r\n        const updatedJobs = [...jobs];\r\n        updatedJobs.splice(index, 1);\r\n        setJobs(updatedJobs);\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\">\r\n            {jobs.map((job, index) => (\r\n                <Box\r\n                    sx={{\r\n                        '& > :not(style)': { m: \"1%\" },\r\n                    }}\r\n                    key={index}>\r\n                    <TextField\r\n                        label=\"Job Title\"\r\n                        value={job.title}\r\n                        onChange={(e) => handleJobFieldChange(index, 'title', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Company\"\r\n                        value={job.company}\r\n                        onChange={(e) => handleJobFieldChange(index, 'company', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Location\"\r\n                        value={job.location}\r\n                        onChange={(e) => handleJobFieldChange(index, 'location', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Duration\"\r\n                        value={job.duration}\r\n                        onChange={(e) => handleJobFieldChange(index, 'duration', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Summary\"\r\n                        value={job.summary}\r\n                        onChange={(e) => handleJobFieldChange(index, 'summary', e.target.value)}\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        className={classes.textFieldMultiLine}\r\n                    />\r\n                    {jobs.length !== 1 && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleDeleteJob(index)}\r\n                        >\r\n                            Delete Job\r\n                        </Button>\r\n                    )}\r\n                    {job.score && (\r\n                        <Typography className={classes.score}>{job.score.toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 })}</Typography>\r\n\r\n                    )}\r\n                </Box>\r\n            ))}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add />}\r\n                onClick={handleAddJob}\r\n                className={classes.addButton}\r\n            >\r\n                Add Job\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\n\r\nWorkExperienceSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    jobs: PropTypes.arrayOf(PropTypes.object),\r\n    setJobs: PropTypes.func,\r\n    handleJobFieldChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(WorkExperienceSection);","import React from 'react';\r\nimport { TextField, Button, Box, Typography } from \"@mui/material\";\r\nimport { Add } from '@mui/icons-material';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textField: {\r\n        background: \"#FFFFFF\",\r\n        width: \"48%\"\r\n    },\r\n    textFieldMultiLine: {\r\n        background: \"#FFFFFF\",\r\n        width: \"98%\"\r\n    },\r\n    addButton: {\r\n        margin: \"1%\",\r\n    },\r\n    score: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 500,\r\n        fontSize: 20,\r\n        color: theme.palette.primary.main,\r\n        marginLeft: \"1%\",\r\n    },\r\n});\r\n\r\nfunction ProjectExperienceSection(props) {\r\n    const {\r\n        classes,\r\n        projects,\r\n        setProjects,\r\n        handleProjectFieldChange\r\n    } = props;\r\n\r\n    const handleAddProject = () => {\r\n        setProjects([...projects, { name: '', summary: '' }]);\r\n    };\r\n\r\n    const handleDeleteProject = (index) => {\r\n        const updatedProjects = [...projects];\r\n        updatedProjects.splice(index, 1);\r\n        setProjects(updatedProjects);\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\">\r\n            {projects.map((project, index) => (\r\n                <Box sx={{\r\n                    '& > :not(style)': { m: \"1%\" },\r\n                }}\r\n                    key={index}>\r\n\r\n                    <TextField\r\n                        label=\"Project Name\"\r\n                        value={project.name}\r\n                        onChange={(e) => handleProjectFieldChange(index, 'name', e.target.value)}\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                    />\r\n                    <TextField\r\n                        label=\"Summary\"\r\n                        value={project.summary}\r\n                        onChange={(e) => handleProjectFieldChange(index, 'summary', e.target.value)}\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        className={classes.textFieldMultiLine}\r\n                    />\r\n                    {projects.length !== 1 && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleDeleteProject(index)}\r\n                        >\r\n                            Delete Project\r\n                        </Button>\r\n                    )}\r\n                    {project.score && (\r\n                        <Typography className={classes.score}>{project.score.toLocaleString(undefined, { style: 'percent', minimumFractionDigits: 2 })}</Typography>\r\n\r\n                    )}\r\n                </Box>\r\n            ))}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add />}\r\n                onClick={handleAddProject}\r\n                className={classes.addButton}\r\n            >\r\n                Add Project\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nProjectExperienceSection.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    projects: PropTypes.arrayOf(PropTypes.object),\r\n    setProjects: PropTypes.func,\r\n    handleProjectFieldChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ProjectExperienceSection);","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Alert,\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Divider,\r\n    Box,\r\n    Button,\r\n    IconButton,\r\n    Typography,\r\n    LinearProgress,\r\n    Chip,\r\n    Tooltip,\r\n    List,\r\n    ListItem\r\n} from \"@mui/material\";\r\nimport { Add, Close, ExpandMore } from '@mui/icons-material';\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport BasicInfo from \"./BasicInfo\";\r\nimport Skills from \"./Skills\";\r\nimport WorkExperience from \"./WorkExperience\";\r\nimport ProjectExperience from \"./ProjectExperience\";\r\n\r\nconst styles = (theme) => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        width: \"auto\",\r\n        marginLeft: \"2%\",\r\n        marginRight: \"2%\",\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n        marginLeft: \"1%\",\r\n        marginRight: \"1%\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n    },\r\n    issueTitle: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        color: theme.palette.common.black,\r\n        marginLeft: \"1%\",\r\n        marginRight: \"1%\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    sectionTitle: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        color: theme.palette.common.black,\r\n        marginLeft: \"1%\",\r\n    },\r\n    issueDescription: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 400,\r\n        fontSize: 16,\r\n        color: theme.palette.common.grey,\r\n        marginLeft: \"1%\",\r\n    },\r\n    leftPageTitle: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 700,\r\n        fontSize: 28,\r\n        color: theme.palette.common.black,\r\n        marginLeft: \"1%\",\r\n    },\r\n    evaluateButton: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 500,\r\n        fontSize: 20,\r\n        color: theme.palette.primary.main,\r\n        marginLeft: \"1%\",\r\n        textTransform: 'none'\r\n    },\r\n    accordion: {\r\n        background: theme.palette.background.dark,\r\n    },\r\n    scoreMessage: {\r\n        background: \"#ECFFE9\",\r\n        color: \"#219653\",\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 600,\r\n        fontSize: 16,\r\n        height: 'auto',\r\n        '& .MuiChip-label': {\r\n            display: 'block',\r\n            whiteSpace: 'normal',\r\n        },\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    issues: {\r\n        color: theme.palette.common.black,\r\n        background: theme.palette.background.light,\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 400,\r\n        fontSize: 14,\r\n        marginLeft: \"1%\",\r\n        marginRight: \"1%\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    suggestedWorkExperience: {\r\n        color: theme.palette.common.black,\r\n        background: theme.palette.background.light,\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 400,\r\n        fontSize: 14,\r\n        marginLeft: \"1%\",\r\n        marginRight: \"1%\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginBottom: theme.spacing(3),\r\n        },\r\n    },\r\n    suggestedSkill: {\r\n        margin: '5px',\r\n        color: theme.palette.common.black,\r\n    },\r\n    workPosition: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: theme.palette.common.grey,\r\n        marginLeft: \"1%\",\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n});\r\nconst issueType = {\r\n    basic: 0,\r\n    skill: 1,\r\n    work: 2,\r\n    project: 3,\r\n}\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ width: '100%', mr: 1 }}>\r\n                {props.isloading ? (\r\n                    <LinearProgress color=\"success\" sx={{\r\n                        height: 10,\r\n                        borderRadius: 5,\r\n                    }} />) : (\r\n                    <LinearProgress variant=\"determinate\" color=\"success\" {...props} sx={{\r\n                        height: 10,\r\n                        borderRadius: 5,\r\n                    }} />)}\r\n            </Box>\r\n            <Box sx={{ minWidth: 35 }}>\r\n                <Typography variant=\"h4\" color=\"text.primary\">{`${Math.round(\r\n                    props.value,\r\n                )}/100`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction TailorResume(props) {\r\n    const {\r\n        pushMessageToSnackbar,\r\n        classes,\r\n        resume,\r\n        setResume,\r\n        instance,\r\n        jobId,\r\n        resumeId,\r\n    } = props;\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [phone, setPhone] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [portofolioLink, setPortofolioLink] = React.useState('');\r\n    const [skills, setSkills] = React.useState([]);\r\n    const [newSkill, setNewSkill] = React.useState('');\r\n    const [jobs, setJobs] = React.useState([\r\n    ]);\r\n    const [projects, setProjects] = React.useState([\r\n    ]);\r\n    const [activeSection, setActiveSection] = React.useState(1);\r\n\r\n    const handleAccordion = (section) => (event, isExpanded) => {\r\n        setActiveSection(isExpanded ? section : 0);\r\n    };\r\n    const [issues, setIssues] = React.useState([]);\r\n    const [score, setScore] = React.useState(0);\r\n    const [scoreMessage, setScoreMessage] = React.useState('');\r\n    const [suggestedSkills, setSuggestedSkills] = React.useState([]);\r\n    const [suggestedWorkExperiences, setSuggestedWorkExperiences] = React.useState([]);\r\n    const [suggestedProjectExperiences, setSuggestedProjectExperiences] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n    const handleUpdateIssue = (index, field, value) => {\r\n        const updatedIssues = [...issues];\r\n        updatedIssues[index][field] = value;\r\n        setIssues(updatedIssues);\r\n    };\r\n\r\n    const handleJobFieldChange = (index, field, value) => {\r\n        const updatedJobs = [...jobs];\r\n        updatedJobs[index][field] = value;\r\n        setJobs(updatedJobs);\r\n    };\r\n\r\n    const handleProjectFieldChange = (index, field, value) => {\r\n        const updatedProjects = [...projects];\r\n        updatedProjects[index][field] = value;\r\n        setProjects(updatedProjects);\r\n    };\r\n\r\n    const evaluateResume = () => {\r\n\r\n        console.log(\"evaluating resume\");\r\n        pushMessageToSnackbar({\r\n            isErrorMessage: false,\r\n            text: \"Tailoring your resume\",\r\n        });\r\n\r\n        var issueSummaries = [];\r\n        var issues = [];\r\n        var score = 0;\r\n        if (resume.basic_info.first_name === '') {\r\n            issueSummaries.push({ type: issueType.basic, id: \"name\", summary: \"Missing Name\" });\r\n        }\r\n        else\r\n            score += 5;\r\n        if (resume.basic_info.phone_number === '') {\r\n            issueSummaries.push({ type: issueType.basic, id: \"phone\", summary: \"Missing Phone Number\" });\r\n        } else\r\n            score += 5;\r\n        if (resume.basic_info.email === '') {\r\n            issueSummaries.push({ type: issueType.basic, id: \"email\", summary: \"Missing Email Address\" });\r\n        } else\r\n            score += 5;\r\n        if (resume.basic_info.portofolioLink === '') {\r\n            issueSummaries.push({ type: issueType.basic, id: \"portofolio\", summary: \"Missing Portofolio Link\" });\r\n        } else\r\n            score += 5;\r\n\r\n\r\n        // Retrieve suggested skills from backend\r\n        var dummySuggestedSkills = [\"Javascript\", \"Python\", \"Jenkins\"];\r\n        for (let skill of resume.skills.map(skill => skill.skill_name)) {\r\n            if (dummySuggestedSkills.includes(skill)) {\r\n                dummySuggestedSkills.splice(dummySuggestedSkills.indexOf(skill), 1);\r\n            }\r\n        }\r\n        for (let suggestedSkill of dummySuggestedSkills) {\r\n            issueSummaries.push({ type: issueType.skill, id: \"skill\", summary: suggestedSkill });\r\n        }\r\n        setSuggestedSkills(dummySuggestedSkills);\r\n        if (resume.skills.length > 0 && resume.skills.length < 3) {\r\n            score += 15 - 5 * (3 - resume.skills.length);\r\n        }\r\n        else {\r\n            score += 15;\r\n        }\r\n\r\n        if (resume.work_experience.length > 0) {\r\n            score += 10;\r\n        }\r\n\r\n        // Retrieve work experience relevence score\r\n        let jobPromises = [];\r\n        var suggestedJobExperiences = [];\r\n        jobs.forEach(function (job) {\r\n            if (job.summary !== '') {\r\n                console.log(\"Calculating relevence score for job: \" + job.title);\r\n                pushMessageToSnackbar({\r\n                    isErrorMessage: false,\r\n                    text: \"Evaluating experience for job: \" + job.title,\r\n                });\r\n                let headers = {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                };\r\n                let body = {\r\n                    experience: job.summary,\r\n                    jobId: jobId\r\n                };\r\n\r\n                jobPromises.push(instance.post('/v0/query/experiencerelevancescore', body, { headers }));\r\n            }\r\n        });\r\n\r\n        // Retrieve project experience relevence score\r\n        let projectPromises = [];\r\n        var suggestedProjectExperiences = [];\r\n        projects.forEach(function (project) {\r\n            if (project.summary !== '') {\r\n                console.log(\"Calculating relevence score for project: \" + project.name);\r\n                pushMessageToSnackbar({\r\n                    isErrorMessage: false,\r\n                    text: \"Evaluating experience for project: \" + project.name,\r\n                });\r\n                let headers = {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                };\r\n                let body = {\r\n                    experience: project.summary,\r\n                    jobId: jobId\r\n                };\r\n\r\n                projectPromises.push(instance.post('/v0/query/experiencerelevancescore', body, { headers }));\r\n            }\r\n        });\r\n\r\n        let jobIndex = 0;\r\n        let projectIndex = 0;\r\n        Promise.all(jobPromises).then(function (a) {\r\n\r\n            let jobRecommandationPromises = [];\r\n\r\n            a.forEach(function (response) {\r\n                handleJobFieldChange(jobIndex, 'score', response.data);\r\n\r\n                // Retrieve suggested work experiences from backend\r\n                if (response.data < 0.8) {\r\n                    console.log(\"Experience relevence score for job: \" + jobs[jobIndex].title + \" is lower than 80, recommading new experiences\");\r\n                    pushMessageToSnackbar({\r\n                        isErrorMessage: false,\r\n                        text: \"Experience for job: \" + jobs[jobIndex].title + \" don't really match the job description, recommading new experiences\"\r\n                    });\r\n                    let headers = {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                    };\r\n                    let body = {\r\n                        experience: jobs[jobIndex].summary,\r\n                        jobId: jobId\r\n                    };\r\n\r\n                    jobRecommandationPromises.push(instance.post('/v0/tailor/experience', body, { headers }));\r\n                }\r\n                jobIndex++;\r\n\r\n            });\r\n\r\n\r\n            Promise.all(projectPromises).then(function (b) {\r\n\r\n                let projectRecommandationPromises = [];\r\n\r\n                b.forEach(function (response) {\r\n                    console.log(response.data);\r\n                    handleProjectFieldChange(projectIndex, 'score', response.data);\r\n\r\n                    // Retrieve suggested project experiences from backend\r\n                    if (response.data < 0.8) {\r\n                        console.log(\"Experience relevence score for project: \" + projects[projectIndex].name + \" is lower than 80, recommading new experiences\");\r\n                        pushMessageToSnackbar({\r\n                            isErrorMessage: false,\r\n                            text: \"Experience for project: \" + projects[projectIndex].name + \" don't really match the job description, recommading new experiences\"\r\n                        });\r\n                        let headers = {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                        };\r\n                        let body = {\r\n                            experience: projects[projectIndex].summary,\r\n                            jobId: jobId\r\n                        };\r\n\r\n                        projectRecommandationPromises.push(instance.post('/v0/tailor/experience', body, { headers }));\r\n                    }\r\n                    projectIndex++;\r\n                });\r\n\r\n                Promise.all(jobRecommandationPromises).then(function (c) {\r\n                    c.forEach(function (response) {\r\n                        suggestedJobExperiences.push(response.data);\r\n\r\n                    });\r\n                    for (let suggestedJobExperience of suggestedJobExperiences) {\r\n                        issueSummaries.push({ type: issueType.work, position: \"XXX - XXX\", summary: suggestedJobExperience[\"Experience Summary\"] });\r\n                    }\r\n                    setSuggestedWorkExperiences(suggestedJobExperiences);\r\n\r\n                    Promise.all(projectRecommandationPromises).then(function (d) {\r\n                        d.forEach(function (response) {\r\n                            suggestedProjectExperiences.push(response.data);\r\n                        });\r\n                        for (let suggestedProjectExperience of suggestedProjectExperiences) {\r\n                            issueSummaries.push({ type: issueType.project, summary: suggestedProjectExperience[\"Experience Summary\"] });\r\n                        }\r\n                        setSuggestedProjectExperiences(suggestedProjectExperiences);\r\n\r\n                        for (let issueSummary of issueSummaries) {\r\n                            issues.push({ type: issueSummary.type, id: issueSummary.id, summary: issueSummary.summary, position: issueSummary.position, ignore: false });\r\n                        }\r\n                        setIssues(issues);\r\n                    });\r\n                });\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        let headers = {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n        };\r\n\r\n        instance.get('/v0/query/relevancescore?jobId=' + jobId + '&resumeId=' + resumeId, { headers })\r\n            .then(response => {\r\n                pushMessageToSnackbar({\r\n                    isErrorMessage: false,\r\n                    text: \"Resume Updated\",\r\n                });\r\n                let relevenceScore = parseFloat(response.data.split(\"\\n\")[0].split(/\\s+/)[1]);\r\n                let scoreClone = score + 55 * relevenceScore;\r\n                setScore(scoreClone);\r\n                if (scoreClone >= 60) {\r\n                    setScoreMessage(\"Great job on your resume, fix problems below could help you improve your success rate for your next opportunities\");\r\n                }\r\n                setIsLoading(false);\r\n                console.log(\"resume evaluation complete\");\r\n            });\r\n\r\n\r\n    }\r\n\r\n    const handleClickFocus = (issue) => {\r\n        if (issue.type === issueType.basic) {\r\n            setActiveSection(1);\r\n        }\r\n        if (issue.type === issueType.skill) {\r\n            setActiveSection(2);\r\n            setSkills([...skills, issue.summary])\r\n            var suggestedSkillsClone = [...suggestedSkills];\r\n            suggestedSkillsClone.splice(suggestedSkillsClone.indexOf(issue.summary), 1);\r\n            setSuggestedSkills(suggestedSkillsClone)\r\n        }\r\n        if (issue.type === issueType.work) {\r\n            setActiveSection(3);\r\n        }\r\n        if (issue.type === issueType.project) {\r\n            setActiveSection(4);\r\n        }\r\n\r\n        const element = document.getElementById(issue.id);\r\n        if (element) {\r\n            element.scrollIntoView({ behavior: 'smooth' });\r\n            element.focus();\r\n        }\r\n    };\r\n\r\n    const updateResume = () => {\r\n        console.log(\"updating resume\");\r\n        setIsLoading(true);\r\n        var resumeClone = { ...resume };\r\n        resumeClone.basic_info.first_name = name.split(\" \").length > 0 ? name.split(\" \")[0] : \"\";\r\n        resumeClone.basic_info.last_name = name.split(\" \").length > 1 ? name.split(\" \")[1] : \"\";\r\n        resumeClone.basic_info.phone_number = phone;\r\n        resumeClone.basic_info.location = address;\r\n        resumeClone.basic_info.portfolio_website_url = portofolioLink;\r\n\r\n        let resumeSkills = []\r\n        for (let skill of skills) {\r\n            resumeSkills.push({ skill_name: skill })\r\n        }\r\n        resumeClone.skills = [...resumeSkills];\r\n\r\n        let resumeJobs = []\r\n        for (let job of jobs) {\r\n            let summaries = job.summary.split(\"\\n- \")\r\n            let experience_summary = []\r\n            for (let bullet_point of summaries) {\r\n                experience_summary.push({ bullet_point: bullet_point.replace('- ', '').replace('\\n', '') })\r\n            }\r\n\r\n            resumeJobs.push({\r\n                job_title: job.title,\r\n                company: job.company,\r\n                location: job.location,\r\n                start_year_month: job.duration.split(\" to \").length > 0 ? job.duration.split(\" to \")[0] : \"\",\r\n                end_year_month: job.duration.split(\" to \").length > 1 ? job.duration.split(\" to \")[1] : \"\",\r\n                experience_summary: experience_summary\r\n            })\r\n        }\r\n        resumeClone.work_experience = [...resumeJobs];\r\n\r\n        let resumeProjects = []\r\n        for (let project of projects) {\r\n            let summaries = project.summary.split(\"\\n- \")\r\n            let experience_summary = []\r\n            for (let bullet_point of summaries) {\r\n                experience_summary.push({ bullet_point: bullet_point.replace('- ', '').replace('\\n', '') })\r\n            }\r\n\r\n            resumeProjects.push({\r\n                project_name: project.name,\r\n                experience_summary: experience_summary\r\n            })\r\n        }\r\n        resumeClone.project_experience = [...resumeProjects];\r\n\r\n        setResume(resumeClone);\r\n\r\n        console.log(\"resume update completed\")\r\n\r\n        let resumeString = JSON.stringify(resumeClone);\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n        };\r\n        let body = {\r\n            resumeId: resumeId,\r\n            resumeString: resumeString\r\n        };\r\n\r\n\r\n        instance.post('/v0/update/resume', body, { headers })\r\n            .then(response => {\r\n                pushMessageToSnackbar({\r\n                    isErrorMessage: false,\r\n                    text: \"Resume Updated\",\r\n                });\r\n                console.log(\"triggering resume evaluation\");\r\n                evaluateResume();\r\n            });\r\n\r\n    };\r\n\r\n    const refreshForm = () => {\r\n\r\n        console.log(\"refreshing form\")\r\n        if (resume != null) {\r\n            setName(resume.basic_info.first_name + \" \" + resume.basic_info.last_name);\r\n            setPhone(resume.basic_info.phone_number);\r\n            setEmail(resume.basic_info.email);\r\n            setAddress(resume.basic_info.location);\r\n            setPortofolioLink(resume.basic_info.portfolio_website_url || resume.basic_info.linkedin_url);\r\n            setSkills(resume.skills.map(skill => skill.skill_name));\r\n\r\n            let workExperiences = [];\r\n            for (let workExperience of resume.work_experience) {\r\n                let summaries = workExperience.experience_summary.map(summary => summary.bullet_point);\r\n                let summaryMessage = \"\"\r\n                for (let summary of summaries) {\r\n                    summaryMessage += \"- \" + summary + \"\\n\"\r\n                }\r\n                workExperiences.push({\r\n                    title: workExperience.job_title,\r\n                    company: workExperience.company,\r\n                    location: workExperience.location,\r\n                    duration: workExperience.start_year_month + \" to \" + workExperience.end_year_month,\r\n                    summary: summaryMessage\r\n                })\r\n            }\r\n            setJobs(workExperiences);\r\n\r\n            let projectExperiences = [];\r\n            for (let projectExperience of resume.project_experience) {\r\n                let summaries = projectExperience.experience_summary.map(summary => summary.bullet_point);\r\n                let summaryMessage = \"\"\r\n                for (let summary of summaries) {\r\n                    summaryMessage += \"- \" + summary + \"\\n\"\r\n                }\r\n                projectExperiences.push({\r\n                    name: projectExperience.project_name,\r\n                    summary: summaryMessage\r\n                })\r\n            }\r\n            setProjects(projectExperiences);\r\n            console.log(\"form refresh completed\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshForm();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        evaluateResume();\r\n    }, [projects]);\r\n\r\n    useEffect(() => {\r\n        refreshForm();\r\n    }, [resume, setResume]);\r\n\r\n    return (\r\n        <Box width=\"100%\" display=\"flex\" >\r\n            <Box width=\"66%\" >\r\n                <Box width=\"100%\" display=\"flex\" alignItems=\"center\" sx={{ justifyContent: 'space-between' }}>\r\n                    <Typography className={classes.leftPageTitle}>Tailor Resume</Typography>\r\n                    <Button variant=\"text\" className={classes.evaluateButton} onClick={updateResume}>Evaluate</Button>\r\n                </Box>\r\n                <Accordion expanded={activeSection === 1} onChange={handleAccordion(1)} className={classes.accordion}>\r\n                    <AccordionSummary expandIcon={<ExpandMore />}>\r\n                        <Typography className={classes.sectionTitle}>Basic Info</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <BasicInfo\r\n                            pushMessageToSnackbar={pushMessageToSnackbar}\r\n                            name={name}\r\n                            setName={setName}\r\n                            phone={phone}\r\n                            setPhone={setPhone}\r\n                            email={email}\r\n                            setEmail={setEmail}\r\n                            address={address}\r\n                            setAddress={setAddress}\r\n                            portofolioLink={portofolioLink}\r\n                            setPortofolioLink={setPortofolioLink}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion expanded={activeSection === 2} onChange={handleAccordion(2)} className={classes.accordion}>\r\n                    <AccordionSummary expandIcon={<ExpandMore />}>\r\n                        <Typography className={classes.sectionTitle}>Skills</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Skills\r\n                            pushMessageToSnackbar={pushMessageToSnackbar}\r\n                            skills={skills}\r\n                            setSkills={setSkills}\r\n                            newSkill={newSkill}\r\n                            setNewSkill={setNewSkill}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion expanded={activeSection === 3} onChange={handleAccordion(3)} className={classes.accordion}>\r\n                    <AccordionSummary expandIcon={<ExpandMore />}>\r\n                        <Typography className={classes.sectionTitle}>Work Experience</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <WorkExperience\r\n                            pushMessageToSnackbar={pushMessageToSnackbar}\r\n                            jobs={jobs}\r\n                            setJobs={setJobs}\r\n                            handleJobFieldChange={handleJobFieldChange}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion expanded={activeSection === 4} onChange={handleAccordion(4)} className={classes.accordion}>\r\n                    <AccordionSummary expandIcon={<ExpandMore />}>\r\n                        <Typography className={classes.sectionTitle}>Project Experience</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <ProjectExperience\r\n                            pushMessageToSnackbar={pushMessageToSnackbar}\r\n                            projects={projects}\r\n                            setProjects={setProjects}\r\n                            handleProjectFieldChange={handleProjectFieldChange}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Box>\r\n            <Divider orientation=\"vertical\" variant=\"middle\" flexItem className={classes.wrapper} />\r\n            <Box width=\"34%\">\r\n\r\n                <LinearProgressWithLabel value={score} isloading={isLoading} />\r\n\r\n                <Chip\r\n                    label={scoreMessage}\r\n                    className={classes.scoreMessage}\r\n                />\r\n\r\n                {issues.filter(function (issue) { return issue.type === issueType.basic && !issue.ignore }).length > 0 && (\r\n                    <Typography className={classes.issueTitle}>Basic Issues</Typography>)}\r\n\r\n                {issues.map((issue, index) => {\r\n\r\n                    return issue.type === issueType.basic && !issue.ignore && (\r\n                        <Alert\r\n                            className={classes.issues}\r\n                            key={index}\r\n                            severity=\"error\"\r\n                            action={\r\n                                <Box display=\"flex\" alignItems=\"center\" sx={{ minWidth: 100 }}>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        onClick={() => handleClickFocus(issue)}\r\n                                    >\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Tooltip title=\"Ignore\">\r\n                                        <IconButton\r\n                                            aria-label=\"close\"\r\n                                            color=\"error\"\r\n                                            size=\"small\"\r\n                                            onClick={() => handleUpdateIssue(index, 'ignore', true)}\r\n                                        >\r\n                                            <Close fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Box>\r\n                            }\r\n                        >\r\n                            {issue.summary}\r\n                        </Alert>)\r\n                })}\r\n\r\n\r\n                {suggestedSkills.length > 0 && (\r\n                    <Box>\r\n                        <Typography className={classes.issueTitle}>Skills Suggestions</Typography>\r\n                        <Typography className={classes.issueDescription}>Add more skills could help you improve your resume\r\n                        </Typography>\r\n                        {issues.map((issue, index) => {\r\n\r\n                            return issue.type === issueType.skill && !skills.includes(issue.summary) && (\r\n\r\n                                <Chip\r\n                                    key={index}\r\n                                    label={issue.summary}\r\n                                    onDelete={() => handleClickFocus(issue)}\r\n                                    deleteIcon={<Add />}\r\n                                    className={classes.suggestedSkill}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                )}\r\n\r\n                {suggestedWorkExperiences.length > 0 && (\r\n                    <Box>\r\n                        <Typography className={classes.issueTitle}>Work Experience Recommandation</Typography>\r\n                        {issues.map((issue, indexA) => {\r\n\r\n                            return issue.type === issueType.work && !issue.ignore && Array.isArray(issue.summary) && (\r\n                                <Box>\r\n                                    <Typography className={classes.workPosition}>{issue.position}</Typography>\r\n\r\n                                    <Alert\r\n                                        className={classes.suggestedWorkExperience}\r\n                                        key={indexA}\r\n                                        icon={false}\r\n                                        action={\r\n                                            <Box display=\"flex\" alignItems=\"center\" sx={{ minWidth: 100 }}>\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => handleClickFocus(issue)}\r\n                                                >\r\n                                                    Edit\r\n                                                </Button>\r\n                                                <Tooltip title=\"Ignore\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"close\"\r\n                                                        color=\"error\"\r\n                                                        size=\"small\"\r\n                                                        onClick={() => handleUpdateIssue(indexA, 'ignore', true)}\r\n                                                    >\r\n                                                        <Close fontSize=\"inherit\" />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Box>\r\n                                        }\r\n                                    >\r\n                                        <List\r\n                                            sx={{\r\n                                                listStyleType: 'disc',\r\n                                                pl: 2,\r\n                                                '& .MuiListItem-root': {\r\n                                                    display: 'list-item',\r\n                                                },\r\n                                            }}>\r\n                                            {issue.summary.map((point, indexB) => {\r\n                                                return (\r\n                                                    <ListItem key={\"\" + indexA + indexB}>\r\n                                                        {point.replace(\"-\", \"\")}\r\n                                                    </ListItem>\r\n                                                )\r\n                                            })}\r\n\r\n                                        </List>\r\n                                    </Alert>\r\n                                </Box>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                )}\r\n\r\n                {suggestedProjectExperiences.length > 0 && (\r\n                    <Box>\r\n                        <Typography className={classes.issueTitle}>Project Experience Recommandation</Typography>\r\n                        {issues.map((issue, indexA) => {\r\n\r\n                            return issue.type === issueType.project && !issue.ignore && Array.isArray(issue.summary) && (\r\n                                <Alert\r\n                                    className={classes.issues}\r\n                                    key={indexA}\r\n                                    icon={false}\r\n                                    action={\r\n                                        <Box display=\"flex\" alignItems=\"center\" sx={{ minWidth: 100 }}>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                onClick={() => handleClickFocus(issue)}\r\n                                            >\r\n                                                Edit\r\n                                            </Button>\r\n                                            <Tooltip title=\"Ignore\">\r\n                                                <IconButton\r\n                                                    aria-label=\"close\"\r\n                                                    color=\"error\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => handleUpdateIssue(indexA, 'ignore', true)}\r\n                                                >\r\n                                                    <Close fontSize=\"inherit\" />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                    }\r\n                                >\r\n                                    <List\r\n                                        sx={{\r\n                                            listStyleType: 'disc',\r\n                                            pl: 2,\r\n                                            '& .MuiListItem-root': {\r\n                                                display: 'list-item',\r\n                                            },\r\n                                        }}>\r\n                                        {issue.summary.map((point, indexB) => {\r\n                                            return (\r\n                                                <ListItem key={\"\" + indexA + indexB}>\r\n                                                    {point.replace(\"-\", \"\")}\r\n                                                </ListItem>\r\n                                            )\r\n                                        })}\r\n\r\n                                    </List>\r\n                                </Alert>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nTailorResume.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    resume: PropTypes.object,\r\n    setResume: PropTypes.func.isRequired,\r\n    instance: PropTypes.func,\r\n    jobId: PropTypes.string,\r\n    resumeId: PropTypes.string,\r\n    setResumeId: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(TailorResume);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Paper\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\n\r\nconst styles = (theme) => ({\r\n    pageTitle: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 700,\r\n        fontSize: 32,\r\n        color: theme.palette.common.black,\r\n        marginLeft: \"1%\"\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        width: \"auto\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"95%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: theme.spacing(4),\r\n            marginBottom: theme.spacing(4),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"90%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"82.5%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"70%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n});\r\n\r\nfunction PreviewResume(props) {\r\n    const {\r\n        classes,\r\n    } = props;\r\n\r\n    return (\r\n        <Box className={classes.wrapper}>\r\n            <Box display=\"flex\" alignItems=\"center\" sx={{ justifyContent: 'space-around' }}>\r\n                <Typography className={classes.pageTitle}>Congrats! Here is your final resume</Typography>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" sx={{ justifyContent: 'space-around' }}>\r\n                <Paper elevation={3} sx={{\r\n                    width: 850,\r\n                    height: 1100,\r\n                    marginTop: 10,\r\n                }} />\r\n            </Box>\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nPreviewResume.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(PreviewResume);\r\n","import React from 'react';\r\nimport { TextField, Box } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    textFieldMultiLine: {\r\n        background: \"#FFFFFF\",\r\n        width: \"98%\"\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        width: \"auto\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            width: \"95%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: theme.spacing(4),\r\n            marginBottom: theme.spacing(4),\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"90%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"82.5%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            width: \"70%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n});\r\n\r\nfunction EditJobDescription(props) {\r\n    const {\r\n        classes,\r\n        jobDescription,\r\n        setJobDescription\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <Box component=\"form\" className={classes.wrapper}\r\n            sx={{\r\n                '& > :not(style)': { m: \"1%\" },\r\n            }}>\r\n            <TextField\r\n                label=\"Job Description\"\r\n                value={jobDescription}\r\n                onChange={(e) => setJobDescription(e.target.value)}\r\n                multiline\r\n                rows={50}\r\n                variant=\"outlined\"\r\n                className={classes.textFieldMultiLine}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nEditJobDescription.propTypes = {\r\n    pushMessageToSnackbar: PropTypes.func,\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    style: PropTypes.object,\r\n    jobDescription: PropTypes.string,\r\n    setJobDescription: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EditJobDescription);","import React from 'react';\r\nimport { CircularProgress, Box } from \"@mui/material\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\" sx={{ justifyContent: 'space-around', m: \"10%\" }}>\r\n            <CircularProgress />\r\n        </Box>\r\n    );\r\n}\r\n\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport PropsRoute from \"./PropsRoute\";\r\nimport useLocationBlocker from \"../functions/useLocationBlocker\";\r\nimport UploadResume from \"./resume/UploadResume\";\r\nimport EditResume from \"./resume/edit/EditResume\";\r\nimport TailorResume from \"./resume/tailor/TailorResume\";\r\nimport PreviewResume from \"./resume/preview/PreviewResume\";\r\nimport EditJobDescription from \"./job_description/EditJobDescription\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    width: \"auto\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"90%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"82.5%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"70%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Routing(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    file,\r\n    setFile,\r\n    resume,\r\n    setResume,\r\n    jobDescription,\r\n    setJobDescription,\r\n    instance,\r\n    jobId,\r\n    resumeId,\r\n    setResumeId,\r\n  } = props;\r\n  useLocationBlocker();\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <PropsRoute\r\n          path=\"/ux-app/upload-resume\"\r\n          component={UploadResume}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          file={file}\r\n          setFile={setFile}\r\n        />\r\n        <PropsRoute\r\n          path=\"/ux-app/edit\"\r\n          component={EditResume}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          resume={resume}\r\n          setResume={setResume}\r\n        />\r\n        <PropsRoute\r\n          path=\"/ux-app/job-description\"\r\n          component={EditJobDescription}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          jobDescription={jobDescription}\r\n          setJobDescription={setJobDescription}\r\n        />\r\n        <PropsRoute\r\n          path=\"/ux-app/tailor\"\r\n          component={TailorResume}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          resume={resume}\r\n          setResume={setResume}\r\n          instance={instance}\r\n          jobId={jobId}\r\n          resumeId={resumeId}\r\n          setResumeId={setResumeId}\r\n        />\r\n        <PropsRoute\r\n          path=\"/ux-app/preview\"\r\n          component={PreviewResume}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n        />\r\n        <PropsRoute\r\n          path=\"/ux-app/loading\"\r\n          component={Loading}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nRouting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  file: PropTypes.object,\r\n  setFile: PropTypes.func,\r\n  resume: PropTypes.object,\r\n  setResume: PropTypes.func.isRequired,\r\n  jobDescription: PropTypes.string,\r\n  setJobDescription: PropTypes.func,\r\n  instance: PropTypes.func,\r\n  jobId: PropTypes.string,\r\n  resumeId: PropTypes.string,\r\n  setResumeId: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Avatar,\r\n  Button,\r\n  ListItem,\r\n  ListItemText,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    boxShadow: theme.shadows[6],\r\n    backgroundColor: theme.palette.common.white,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  appBarToolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4),\r\n    },\r\n  },\r\n  accountAvatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    height: 30,\r\n    width: 30,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: theme.spacing(1.5),\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n  },\r\n  smBordered: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      borderRadius: \"50% !important\",\r\n    },\r\n  },\r\n  iconListItem: {\r\n    width: \"auto\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: 11,\r\n    paddingBottom: 11,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  brandText: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 700,\r\n    fontSize: 40,\r\n    color: \"#1890FF\"\r\n  },\r\n  username: {\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  justifyCenter: {\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nfunction NavBar(props) {\r\n  const {\r\n    classes,\r\n    theme,\r\n    handleNext,\r\n    handleBack,\r\n    handleRestart,\r\n    activeStep,\r\n    steps,\r\n  } = props;\r\n  const isWidthUpSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"sticky\" className={classes.appBar}>\r\n        <Toolbar className={classes.appBarToolbar}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Typography\r\n              className={classes.brandText}\r\n              display=\"inline\"\r\n            >\r\n              ResuFitter\r\n            </Typography>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n          >\r\n            <ListItem\r\n              disableGutters\r\n              className={classNames(classes.iconListItem, classes.smBordered)}\r\n            >\r\n              <Avatar\r\n                alt=\"profile picture\"\r\n                className={classNames(classes.accountAvatar)}\r\n              >\r\n                HL\r\n              </Avatar >\r\n              {isWidthUpSm && (\r\n                <ListItemText\r\n                  className={classes.username}\r\n                  primary={\r\n                    <Typography color=\"textPrimary\">Haoran Liu</Typography>\r\n                  }\r\n                />\r\n              )}\r\n            </ListItem>\r\n          </Box>\r\n\r\n          {activeStep === steps.length ? (\r\n            <React.Fragment>\r\n              <Button\r\n                onClick={handleRestart}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                size=\"large\">\r\n                Restart\r\n              </Button>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                size=\"large\"\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Box sx={{ flex: '1 1 auto' }} />\r\n              <Button\r\n                onClick={handleNext}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{ mr: 1 }}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Download' : activeStep === 2 ? 'Generate' : activeStep === 0 ? 'Upload' : 'Next'}\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleRestart: PropTypes.func.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  steps: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setActiveStep: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavBar);\r\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Snackbar } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n});\r\n\r\nfunction ConsecutiveSnackbars(props) {\r\n    const { classes, getPushMessageFromChild } = props;\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messageInfo, setMessageInfo] = useState({});\r\n    const queue = useRef([]);\r\n\r\n    const processQueue = useCallback(() => {\r\n        if (queue.current.length > 0) {\r\n            setMessageInfo(queue.current.shift());\r\n            setIsOpen(true);\r\n        }\r\n    }, [setMessageInfo, setIsOpen, queue]);\r\n\r\n    const handleClose = useCallback((_, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setIsOpen(false);\r\n    }, [setIsOpen]);\r\n\r\n    const pushMessage = useCallback(message => {\r\n        queue.current.push({\r\n            message,\r\n            key: new Date().getTime(),\r\n        });\r\n        if (isOpen) {\r\n            // immediately begin dismissing current message\r\n            // to start showing new one\r\n            setIsOpen(false);\r\n        } else {\r\n            processQueue();\r\n        }\r\n    }, [queue, isOpen, setIsOpen, processQueue]);\r\n\r\n    useEffect(() => {\r\n        getPushMessageFromChild(pushMessage);\r\n    }, [getPushMessageFromChild, pushMessage]);\r\n\r\n    return (\r\n        <Snackbar\r\n            disableWindowBlurListener\r\n            key={messageInfo.key}\r\n            anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n            }}\r\n            open={isOpen}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n            ContentProps={{\r\n                classes: {\r\n                    root: classes.root,\r\n                },\r\n            }}\r\n            message={\r\n                <span>{messageInfo.message ? messageInfo.message.text : null}</span>\r\n            }\r\n            TransitionProps={{\r\n                onExited: processQueue\r\n            }} />\r\n    );\r\n\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n    getPushMessageFromChild: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Typography,\r\n  StepLabel,\r\n  Stepper,\r\n  Step,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    width: \"auto\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"90%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"82.5%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"70%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction ProgressStepper(props) {\r\n  const {\r\n    classes,\r\n    activeStep,\r\n    steps,\r\n    children,\r\n  } = props;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }} className={classes.wrapper}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((step) => (\r\n          <Step key={step.name}>\r\n            <StepLabel>{step.name}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      {activeStep === steps.length ? (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n            className={classes.wrapper}\r\n          >\r\n            <Typography color=\"textPrimary\">\r\n              All steps completed.\r\n            </Typography>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n            className={classes.wrapper}\r\n          >\r\n          </Box>\r\n\r\n          {children}\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nProgressStepper.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleRestart: PropTypes.func.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  steps: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setActiveStep: PropTypes.func.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ProgressStepper);\r\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport Routing from \"./Routing\";\r\nimport NavBar from \"./navigation/NavBar\";\r\nimport ConsecutiveSnackbarMessages from \"./ConsecutiveSnackbarMessages\";\r\nimport ProgressStepper from \"./progress_stepper/ProgressStepper\";\r\nimport axios from \"axios\";\r\n\r\nconst styles = (theme) => ({\r\n  main: {\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n});\r\n\r\nconst steps = [\r\n  {\r\n    name: 'Upload Your Resume',\r\n    link: \"/ux-app/upload-resume\"\r\n  },\r\n  {\r\n    name: 'Preview Your Resume',\r\n    link: \"/ux-app/edit\"\r\n  },\r\n  {\r\n    name: 'Copy the Job Description',\r\n    link: \"/ux-app/job-description\"\r\n  },\r\n  {\r\n    name: 'Tailor Resume',\r\n    link: \"/ux-app/tailor\"\r\n  },\r\n  {\r\n    name: 'Preview Final Resume',\r\n    link: \"/ux-app/preview\"\r\n  }\r\n];\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://174.93.43.239:8000\"\r\n});\r\n\r\nfunction Main(props) {\r\n  const { classes } = props;\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\r\n  const history = useHistory();\r\n  const [file, setFile] = useState(null);\r\n  const [resumeId, setResumeId] = useState(\"\");\r\n  const [jobId, setJobId] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = React.useState('');\r\n  const [resume, setResume] = useState(null);\r\n\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (file === null) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"Please Upload Your Resume\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    const newActiveStep = activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n    history.push(\"/ux-app/loading\");\r\n    if (newActiveStep === 1) {\r\n      const headers = {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      };\r\n      let formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      instance.post('/v0/upload/resume', formData, { headers })\r\n        .then(response => {\r\n          console.log(JSON.stringify(response.data));\r\n          pushMessageToSnackbar({\r\n            isErrorMessage: false,\r\n            text: \"Resume Parsed\",\r\n          });\r\n          setResume(response.data.resume);\r\n          setResumeId(response.data.resume_id);\r\n          history.push(steps[newActiveStep].link);\r\n        });\r\n    }\r\n    else if (newActiveStep === 2) {\r\n      let resumeString = JSON.stringify(resume);\r\n      let headers = {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      };\r\n      let body = {\r\n        resumeId: resumeId,\r\n        resumeString: resumeString\r\n      };\r\n\r\n\r\n      instance.post('/v0/update/resume', body, { headers })\r\n        .then(response => {\r\n          pushMessageToSnackbar({\r\n            isErrorMessage: false,\r\n            text: \"Resume Updated\",\r\n          });\r\n          console.log(response.data);\r\n          history.push(steps[newActiveStep].link);\r\n        });\r\n    }\r\n    else if (newActiveStep === 3) {\r\n      let config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        }\r\n      };\r\n      let body = {\r\n        \"jobDescription\": jobDescription\r\n      }\r\n\r\n      instance.post('/v0/upload/job', body, config)\r\n        .then(response => {\r\n          pushMessageToSnackbar({\r\n            isErrorMessage: false,\r\n            text: \"Job Description Uploaded\",\r\n          });\r\n          setJobId(response.data);\r\n          history.push(steps[newActiveStep].link);\r\n        });\r\n    }\r\n    else if (newActiveStep === steps.length)\r\n      return;\r\n    else\r\n      history.push(steps[newActiveStep].link);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    const newActiveStep = activeStep - 1;\r\n    setActiveStep(newActiveStep);\r\n    history.push(steps[newActiveStep].link);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setActiveStep(0);\r\n    history.push(steps[0].link);\r\n  };\r\n\r\n  const getPushMessageFromChild = useCallback(\r\n    (pushMessage) => {\r\n      setPushMessageToSnackbar(() => pushMessage);\r\n    },\r\n    [setPushMessageToSnackbar]\r\n  );\r\n\r\n  useEffect(() => {\r\n    // fetchRandomTargets();\r\n  }, [\r\n    // fetchRandomTargets,\r\n\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavBar\r\n        handleNext={handleNext}\r\n        handleBack={handleBack}\r\n        handleRestart={handleRestart}\r\n        activeStep={activeStep}\r\n        steps={steps}\r\n        setActiveStep={setActiveStep}\r\n      />\r\n      <ConsecutiveSnackbarMessages\r\n        getPushMessageFromChild={getPushMessageFromChild}\r\n      />\r\n      <main className={classNames(classes.main)}>\r\n        <ProgressStepper\r\n          handleNext={handleNext}\r\n          handleBack={handleBack}\r\n          handleRestart={handleRestart}\r\n          activeStep={activeStep}\r\n          setActiveStep={setActiveStep}\r\n          steps={steps}\r\n        >\r\n          <Routing\r\n            pushMessageToSnackbar={pushMessageToSnackbar}\r\n            file={file}\r\n            setFile={setFile}\r\n            resume={resume}\r\n            setResume={setResume}\r\n            jobDescription={jobDescription}\r\n            setJobDescription={setJobDescription}\r\n            instance={instance}\r\n            jobId={jobId}\r\n            resumeId={resumeId}\r\n            setResumeId={setResumeId}\r\n          />\r\n        </ProgressStepper>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Main));\r\n"],"sourceRoot":""}